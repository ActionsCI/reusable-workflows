name: Deploy
on:
  workflow_call:
    inputs:
      version:
        description: 'Version of the app'
        required: true
        type: string
      registry_url:
        description: 'Registry URL'
        required: false
        type: string
        default: 'gcr.io/face-swipe-app'
      docker_image:
        description: 'Docker image name'
        required: false
        type: string
        default: 'face-swipe-app'
      region:
        description: 'Region'
        required: false
        type: string
        default: 'us-central1'
      service_name:
        description: 'Service name'
        required: false
        type: string
        default: 'faces-among-us'
      project_id:
        description: 'Project ID'
        required: false
        type: string
        default: "face-swipe-app"
      service_account_email:
        description: 'Service Account Email'
        required: false
        type: string
        default: "cloud-run-update"
      gcp_cloud_run_sa_key:
        description: 'GCP Cloud Run Service Account Key'
        required: false
        type: string

jobs:   
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Deploy
      run: |
        echo "Deploying version ${{ inputs.version }}"

    - name: setup GCP SA for docker login
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ inputs.gcp_cloud_run_sa_key }}
        project_id: ${{ inputs.project_id }}
        service_account: ${{ inputs.service_account_email }}@${{ inputs.project_id }}.iam.gserviceaccount.com

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        # version: '>= 363.0.0'
        version: 'latest'
        project_id: ${{ inputs.project_id }}

    - name: Verify gcloud Authentication
      run: gcloud auth list
      
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ inputs.service_name }} \
        --image=${{ inputs.registry_url }}/${{ inputs.docker_image }}:${{ inputs.version }} \
        --region=${{ inputs.region }} \
        --project=${{ inputs.project_id }} \
        --platform=managed
